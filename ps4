import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import LabelEncoder
from sklearn.decomposition import PCA

# Step 1: Load the dataset
df = pd.read_csv('iris_dataset.csv')

# Step 2: Prepare features (exclude target column)
X = df[['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)']]

# Step 3: Apply KMeans clustering
kmeans = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans.fit_predict(X)

# Step 4: (Optional) Compare clusters with actual target labels
le = LabelEncoder()
true_labels = le.fit_transform(df['target'])

# Step 5: Reduce dimensions for visualization using PCA
pca = PCA(n_components=2)
pca_features = pca.fit_transform(X)

# Step 6: Plot the clusters
plt.figure(figsize=(8, 5))
plt.scatter(pca_features[:, 0], pca_features[:, 1], c=df['Cluster'], cmap='viridis', s=50)
plt.title("K-Means Clustering of Iris Dataset (PCA Projection)")
plt.xlabel("PCA Component 1")
plt.ylabel("PCA Component 2")
plt.colorbar(label='Cluster')
plt.grid(True)
plt.show()
